@page "/orders"
@inject IOrderService OrderService
<h3>Order</h3>
@if (_orders == null)
{
    <span>Loading Orders..</span>
}
else if (_orders.Count <= 0)
{
    <span>No orders placed yet.</span>
}
else

{
    foreach (var item in _orders)
    {
        <div class="container-fluid border border-1 border-secondary my-2 rounded p-2">
            <div class="row">
                <div class="col-2 text-center w150 m-1">
                    <img class="img-fluid" src="@item.ProductImageUrl" alt="@item.Product" />
                </div>
                <div class="col-10 col-sm-8 d-flex flex-column m-1">
                    <h4>@item.Product</h4>
                    <span>@item.OrderDate</span>
                    <a href="orders/@item.Id">Details...</a>
                    <div class="price">$@item.TotalPrice</div>
                </div>
            </div>
        </div>
    }
}

@code {
    List<OrderOverViewDto> _orders = null;
    protected override async Task OnInitializedAsync()
    {
        _orders = await OrderService.GetOrders();
        await base.OnInitializedAsync();
    }
}
